RELEASE NOTES SCORPIO 3.0.6

In this release we are adressing 

General:

 - changes to the batch handling for notifications. previously a racing condition could have happened.
 - fixed simplified representation on temporal queries
 - an issue with MQTT notifications

RELEASE NOTES SCORPIO 3.0.5

In this release we are adressing

 - fixing of the interval subscription
 - an issue with the auto history recording of patched entities
 - addressing a potential out of resource situation in the subscription handler 
 
Changes in batch handling and subscriptions:
When using entityOperations to create/update/delete entities, they will be bundled into one notification instead of many. If this behaviour is unwanted it can be deactived via setting config/env variable SCORPIO_SUBSCRIPTION_BATCHNOTIFICATIONS to false.

RELEASE NOTES SCORPIO 3.0.4

In this release we are adressing 
 - an issue where kafka messages were not acknowledged in the quarkus branch.
 - adding support for SSL on the kafka connections 
 
RELEASE NOTES SCORPIO 3.0.3

This a minor bugfix release addressing 

 - an issue where the DBUSER and DBPASS settings in the quarkus release where not respected properly
 
RELEASE NOTES SCORPIO 3.0.2

This a minor bugfix release addressing 

 - an issue where the result of a federated query was not merged correctly
 - an issue with the return codes and body of entity operations

RELEASE NOTES SCORPIO 3.0.1 / FIWARE_8.3

This is a minor update for the FIWARE release. 

In this release we adress 
 - an issue where tenants were not properly forwarded in a federation setup. 
 - an issue where scope queries did not contain all results in certain cases
 - in docker images for the Quarkus release, setting the default names for postgres and kafka 
 - in the Spring release addressing an issue where tenant connection pools did not follow the instructed size
 - in the Spring release added support for custom pool sizes for tenants using SCORPIO_TENANTS_DEFAULT_POOLMAX or SCORPIO_TENANTS_TENANTNAME_POOLMAX.
	if SCORPIO_TENANTS_DEFAULT_POOLMAX is set to -1 the default poolsize will be used

RELEASE NOTES SCORPIO 3.0

With the release of Scorpio 3.0 we are happy to announce that quite a few changes. 

FRAMEWORK CHANGE

We have moved frameworks. With this release we are starting to provide a new Scorpio version which is build using the Quarkus framework and not Spring Boot anymore. 
For the time being we will maintain both versions of Scorpio and release them in parallel. However we will eventually fully move development to the Quarkus version.


The move to Quarkus essentially provides less memory consumption and a faster startup time. On openJDK we currently have roughly reduced the startup time and the memory consumption to 50%. 
Moving to Quarkus we have also adapted a reactive approach in the development which allows for a considerable higher number of connections towards the broker which can be handled in parallel.

With the move to Quarkus we are able to provide native executables for Windows, Ubuntu and MacOS. The native executables start in less than a second and reduces the initial memory consumption to less than 100MB.

AVAILABLE VERSIONS

As you might have seen already there are quite a few variants of Scorpio now released. You can either download the Individual Microservices (e.g. EntityManager, QueryManager, etc.) or the All-In-One Variant which starts everything in one VM. Scorpio is provided either as a Java version or natively compiled for Windows(x64), Ubuntu(x64) and MacOS(x64). 
We provide a version with a Eureka integration however since Eureka integration is much better on the Spring side, we strongly recommend for anyone using a Eureka based setup to stay with the Spring version for the time being.
Our All In One variant is now also availble in a version without needing Kafka. This good news for everyone with limit hardware and if you only want to run a single instance of Scorpio. However mind you that scaling of Scorpio instances REQUIRES a Kafka variant.

DOCKER VERSIONS

We will provide docker images on Dockerhub and on the AWS ECR. All Java versions from Quarkus and Spring will be provided and the Ubuntu native version. Going forward from this release we have changed our naming conventions and will provide versions with following naming scheme: scorpiobroker/[<microservices-name>|all-in-one-runner]:<os>-<variant>-<release-number/latest>. Spring versions will have a prefix "Spring" in the tag. 
